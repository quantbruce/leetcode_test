20. 有效的括号
给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：

左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。

示例 1:

输入: "()"
输出: true
示例 2:

输入: "()[]{}"
输出: true
示例 3:

输入: "(]"
输出: false
示例 4:

输入: "([)]"
输出: false
示例 5:

输入: "{[]}"
输出: true

class Solution:
    def isValid(self, s: str) -> bool:
        dic = {'(': ')', '[': ']', '{': '}', '#': '#'}
        stack = ['#']
        for c in s:
            if c in dic: # 如果c是左括号
                stack.append(c)
            elif dic[stack.pop()]!=c: return False   # 如果c是右括号, 赶紧和刚才那个压入栈的左括号的映射值对比
        return len(stack) == 1 # 最后栈的长度为1，也就是前面的都配对完了，只剩下'#'，就表明所有括号配对成功
                               # tips: 栈stack的长度在每一次pop()后都会对应变短
        
        
        
        
